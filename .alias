alias editprofile='code ~/.bash_profile'
alias editvars='code ~/.vars'
alias editalias='code ~/.alias'
alias eset='code ~/.custom_settings'
alias la='ls -a'
alias checkout='git checkout'
alias gaa='git add -A'
alias gcwip='git add -A && git commit -m WIP'
alias gamend='git add -A && git commit --amend'
alias turbostash='git add -A && git stash'
alias qpush='git add -A && git commit -m Quick_Push && git push'
alias fpush='git push --force origin $(git rev-parse --abbrev-ref HEAD)'
alias db:recreate='./BlueWave\ Database\ Recreate.bat'
alias db:recreate-dev='./BlueWave\ Database\ Recreate\ Dev.bat'
alias rebash='. ~/.vars && . ~/.alias && . ~/.custom_settings'

alias sql:cmd='SQLCMD -E -S $SQL_PROJECT_SERVER -Q '

db:migrate (){
    $RAVEN_PROJECT_PATH/BlueWave\ Database\ Upgrade.bat
}

db:backup (){
    sql:cmd "BACKUP DATABASE BlueWave TO DISK='"$SQL_TEMP_LOCATION$(date +%s).bak"'"
}

db:restore (){
    if [ -z "$1" ]
    then
        RESTORE_TARGET=$SQL_PROJECT_BACKUP
    else
        RESTORE_TARGET=$1
    fi
    sql:cmd "ALTER DATABASE BlueWave SET single_user WITH ROLLBACK immediate;
             DROP DATABASE BLueWave;"
    sql:cmd "RESTORE DATABASE "$SQL_PROJECT_NAME" FROM DISK='"$RESTORE_TARGET"'
             WITH FILE = 1,
             MOVE N'"$SQL_PROJECT_NAME"' TO N'"$SQL_DATA_PATH"BlueWave.mdf',
             MOVE N'"$SQL_PROJECT_NAME"_log' TO N'"$SQL_DATA_PATH"BlueWave_Log.mdf'"
    sql:cmd "ALTER AUTHORIZATION ON DATABASE::"$SQL_PROJECT_NAME" TO "$PROJECT_APPPOOL_USER
}

db:recreate () {
    sql:cmd "BACKUP DATABASE BlueWave TO DISK='"$SQL_TEMP_LOCATION"'"
    sql:cmd "ALTER DATABASE BlueWave SET single_user WITH ROLLBACK immediate;
             DROP DATABASE BLueWave;"
    sql:cmd "RESTORE DATABASE "$SQL_PROJECT_NAME" FROM DISK='"$SQL_PROJECT_BACKUP"'
             WITH FILE = 1,
             MOVE N'"$SQL_PROJECT_NAME"' TO N'"$SQL_DATA_PATH"BlueWave.mdf',
             MOVE N'"$SQL_PROJECT_NAME"_log' TO N'"$SQL_DATA_PATH"BlueWave_Log.mdf'"
    sql:cmd "ALTER AUTHORIZATION ON DATABASE::"$SQL_PROJECT_NAME" TO "$PROJECT_APPPOOL_USER
    db:migrate
}

mountHostShare () {
  sudo mount -t vboxsf archive /mnt/vbox
  sudo mount -t vboxsf Git /git
}

remaster (){
    git add -A
    git commit -m 'Auto commit before merge in master'
    THIS_BRANCH="$(git rev-parse --abbrev-ref HEAD)"
    git pull origin $THIS_BRANCH
    git checkout master
    git pull origin master
    git checkout $THIS_BRANCH
    git merge master
    git push --set-upstream origin $THIS_BRANCH
}

echo "Alias's Updated"
